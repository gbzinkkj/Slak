local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local camera = workspace.CurrentCamera

local following = false
local targetPlayer = nil

-- Função para encontrar o jogador mais próximo
local function getClosestPlayer()
	local shortestDistance = math.huge
	local closest = nil

	for _, otherPlayer in pairs(Players:GetPlayers()) do
		if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
			local distance = (otherPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
			if distance < shortestDistance then
				shortestDistance = distance
				closest = otherPlayer
			end
		end
	end

	return closest
end

-- Alternar modo da câmera
local function toggleCameraFollow()
	following = not following

	if following then
		targetPlayer = getClosestPlayer()

		if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
			camera.CameraType = Enum.CameraType.Scriptable

			RunService:BindToRenderStep("FollowPlayerCam", Enum.RenderPriority.Camera.Value, function()
				if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
					camera.CFrame = CFrame.new(camera.CFrame.Position, targetPlayer.Character.HumanoidRootPart.Position)
				else
					-- Perdeu o alvo? Resetar
					following = false
					RunService:UnbindFromRenderStep("FollowPlayerCam")
					camera.CameraType = Enum.CameraType.Custom
				end
			end)
		else
			following = false
			warn("Nenhum jogador encontrado.")
		end
	else
		RunService:UnbindFromRenderStep("FollowPlayerCam")
		camera.CameraType = Enum.CameraType.Custom
	end
end

-- Detectar tecla "N"
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end

	if input.KeyCode == Enum.KeyCode.N then
		toggleCameraFollow()
	end
end)
